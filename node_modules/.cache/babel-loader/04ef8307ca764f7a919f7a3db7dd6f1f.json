{"ast":null,"code":"var _jsxFileName = \"/Users/parkjeonghyun/Desktop/\\u110F\\u1169\\u1103\\u1173\\u1109\\u1173\\u1110\\u1166\\u110B\\u1175\\u110E\\u1173/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165/codegangster_toto/src/component/MakeTodo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './MakeTodo.css';\nimport dummyTodos from '../static/dummyData';\nimport shortid from 'shortid';\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ko from 'date-fns/locale/ko';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale('ko', ko);\n\nconst MakeTodo = () => {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [todoList, setTodoList] = useState([...dummyTodos]);\n  const [startDate, setStartDate] = useState(new Date());\n  const today = new Date();\n  const dday = startDate;\n  const gap = dday - today.getTime();\n  const result = Math.ceil(gap / (1000 * 60 * 60 * 24));\n\n  const addTodoClick = event => {\n    const todo = {\n      id: 6,\n      d_day: result,\n      content: message,\n      check: false,\n      createdAt: new Date().toLocaleDateString('ko-KR'),\n      updatedAt: new Date().toLocaleDateString('ko-KR')\n    };\n    setTodoList([...todoList, todo]);\n    setMessage(\"\");\n    console.log(todoList);\n  };\n\n  const handleChangeMsg = event => {\n    setMessage(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MakeTodo_input\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        className: \"MakeTodo_input__calendar\",\n        selected: startDate,\n        onChange: date => setStartDate(date),\n        locale: ko,\n        dateFormat: \"yyyy\\uB144 MM\\uC6D4 dd\\uC77C\",\n        minDate: new Date()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MakeTodo_input--message\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: handleChangeMsg,\n          placeholder: \"\\uC77C\\uC815\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"MakeTodo_input--submit\",\n        onClick: addTodoClick,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MakeTodo, \"M3HicOljjkqcgknOknMwOsZvgUc=\");\n\n_c = MakeTodo;\nexport default MakeTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeTodo\");","map":{"version":3,"sources":["/Users/parkjeonghyun/Desktop/코드스테이츠/무제 폴더/codegangster_toto/src/component/MakeTodo.js"],"names":["React","useState","dummyTodos","shortid","DatePicker","registerLocale","setDefaultLocale","ko","MakeTodo","message","setMessage","todoList","setTodoList","startDate","setStartDate","Date","today","dday","gap","getTime","result","Math","ceil","addTodoClick","event","todo","id","d_day","content","check","createdAt","toLocaleDateString","updatedAt","console","log","handleChangeMsg","target","value","date"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport './MakeTodo.css';\nimport dummyTodos from '../static/dummyData';\nimport shortid from 'shortid';\nimport DatePicker, {registerLocale, setDefaultLocale} from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ko from 'date-fns/locale/ko'\nregisterLocale('ko', ko)\n\n\n\nconst MakeTodo = () => {\n\n    const [message, setMessage] = useState(\"\")\n    const [todoList, setTodoList] = useState([...dummyTodos]);\n    const [startDate, setStartDate] = useState(new Date());\n\n\nconst today = new Date();\nconst dday = startDate;\nconst gap = dday - today.getTime();\nconst result = Math.ceil(gap / (1000 * 60 * 60 * 24));\n\n\nconst addTodoClick = (event) => {\n    const todo = {\n        id : 6,\n        d_day : result,\n        content : message,\n        check : false,\n        createdAt : new Date().toLocaleDateString('ko-KR'),\n        updatedAt : new Date().toLocaleDateString('ko-KR')\n    }\n    \n    setTodoList([...todoList, todo]);\n    setMessage(\"\");\n    console.log(todoList)\n}\n\n\nconst handleChangeMsg = (event) => {\n    setMessage(event.target.value);\n}\n\nreturn (\n    <div>\n        <div className = \"MakeTodo_input\">\n\n            <DatePicker className = \"MakeTodo_input__calendar\"\n                        selected = {startDate}\n                        onChange = {date => setStartDate(date)}\n                        locale = {ko}\n                        dateFormat=\"yyyy년 MM월 dd일\"\n                        minDate = {new Date()}>\n            </DatePicker>\n\n    \n        <div className = \"MakeTodo_input--message\">\n            <input type = \"text\"\n                    value = {message}\n                    onChange = {handleChangeMsg}\n                    placeholder = \"일정을 입력하세요\">\n            </input>\n        </div>\n     \n\n            <button className = \"MakeTodo_input--submit\" onClick = {addTodoClick}>\n                <i className=\"fas fa-plus\"></i>\n            </button>\n\n        </div>\n    </div>\n)\n}\n\nexport default MakeTodo;"]},"metadata":{},"sourceType":"module"}