{"ast":null,"code":"var _jsxFileName = \"/Users/parkjeonghyun/Desktop/\\u110F\\u1169\\u1103\\u1173\\u1109\\u1173\\u1110\\u1166\\u110B\\u1175\\u110E\\u1173/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165/codegangster_toto/src/component/ContentTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ContentTodo.css\";\nimport dummy from \"../static/dummyData\";\nimport { styled } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentTodo = ({\n  datas,\n  setDatas\n}) => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n\n  const deleteTodo = (some, deleteId) => {\n    const filterTodo = datas.filter(todo => {\n      return todo.id !== deleteId;\n    });\n    setDatas(filterTodo);\n  };\n\n  const filterCheck = checked ? \"checked\" : \"unChecked\";\n\n  const checkboxHandler = id => {\n    const checkLine = datas.filter(todo => {\n      if (id === todo.id) {\n        setChecked(false);\n      } else {\n        setChecked(true);\n      }\n    });\n    setChecked(checkLine);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo_Container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todoLists\",\n      children: datas.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"todoList\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMenu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todoDate\",\n              children: [\"D - \", todo.d_day]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"createTodo\",\n              children: new Date(todo.createdAt).toLocaleDateString('ko-kr')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"todoContent_checkbox\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox_group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"check\",\n                    onClick: () => {\n                      checkboxHandler(todo.id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"todoContent_delete\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"todoContent_deleteButton\",\n                  onClick: () => deleteTodo(todo.content, todo.id),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-trash-alt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContentTodo, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n\n_c = ContentTodo;\nexport default ContentTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentTodo\");","map":{"version":3,"sources":["/Users/parkjeonghyun/Desktop/코드스테이츠/무제 폴더/codegangster_toto/src/component/ContentTodo.js"],"names":["React","useState","dummy","styled","ContentTodo","datas","setDatas","checked","setChecked","deleteTodo","some","deleteId","filterTodo","filter","todo","id","filterCheck","checkboxHandler","checkLine","map","d_day","Date","createdAt","toLocaleDateString","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ContentTodo.css\";\nimport dummy from \"../static/dummyData\";\nimport { styled } from \"@material-ui/core\";\n\nconst ContentTodo = ({ datas, setDatas }) => {\n\n    const [checked, setChecked] = useState(false);\n\n\n    const deleteTodo = (some, deleteId) => {\n        const filterTodo = datas.filter((todo) => {\n            return todo.id !== deleteId\n        })\n        setDatas(filterTodo);\n    };\n\n    const filterCheck = checked ? \"checked\" : \"unChecked\"; \n\n    const checkboxHandler = (id) => {\n\n        const checkLine = datas.filter((todo) => {\n            if (id === todo.id) {\n                setChecked(false);\n            }\n            else {\n                setChecked(true);\n            }\n        }\n        )\n        setChecked(checkLine)\n    }\n    return (\n        <div className=\"todo_Container\">\n            <ul className=\"todoLists\">\n                {datas.map((todo) => {\n                    return (\n                        <li className=\"todoList\" key={todo.id}>\n                            {/* 각 리스트 항목들 */}\n                            <div className=\"todoMenu\">\n                                <div className=\"todoDate\">D - {todo.d_day}</div>\n                                <div className=\"createTodo\">{new Date(todo.createdAt).toLocaleDateString('ko-kr')}</div>\n                                <div className=\"buttons\">\n                                    <span className=\"todoContent_checkbox\">\n                                        <div className=\"checkbox_group\">\n                                            <input type=\"checkbox\" id=\"check\" onClick={() => { checkboxHandler(todo.id) }} />\n                                        </div>\n                                    </span>\n                                    <span className=\"todoContent_delete\">\n                                        <button className=\"todoContent_deleteButton\"\n                                            onClick={() => deleteTodo(todo.content, todo.id)}\n                                        >\n                                            <i className=\"far fa-trash-alt\"></i>\n                                        </button>\n                                    </span>\n                                </div>\n                            </div>\n\n                            {/* <div className={filterCheck}>\n                                {todo.content}\n                                {checked ? <div className=\"checked\">{todo.content}</div> : <div className=\"unChecked\">{todo.content}</div>}\n                            </div> */}\n\n                        </li >\n                    );\n                })\n                }\n            </ul >\n        </div >\n    );\n};\n\nexport default ContentTodo;"]},"metadata":{},"sourceType":"module"}